
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(splicing)
> options(width=60)
> 
> load("~/tmp/mymm.Rdata")
> geneStructure <- mymm
> 
> get.region <- function(gene) {
+   start <- geneStructure$start[geneStructure$gid[gene]+1]
+   end <- geneStructure$end[geneStructure$gid[gene]+1]
+   seqid <- geneStructure$seqid[gene]
+   seqid_str <- geneStructure$seqid_str[seqid+1]
+   paste(sep="", seqid_str, ":", start, "-", end)
+ }
> 
> reads <- readSAM("/Users/gaborcsardi/tmp/reads-1-10_sorted.bam",
+                  region=get.region(5))
> 
> mat <- matchIso(mymm, gene=5, reads=reads,
+                 paired=TRUE, normalMean=250+33+33, normalVar=250+33+33,
+                 numDevs=4)
> 
> ass <- assignmentMatrix(mymm, gene=5, paired=TRUE, readLength=33,
+                         normalMean=250+33+33, normalVar=250+33+33,
+                         numDevs=4)
> 
> ass
      000000011 000000100 000001000 001000000 010010000
 [1,]   0.00000     0.000  0.000000         0         0
 [2,]   0.00000     0.000  0.000000         0         2
 [3,]   0.00000     0.000  0.000000        81         0
 [4,]   0.00000     0.000  0.000000         0         0
 [5,]   0.00000     0.000  0.000000         0         2
 [6,]   0.00000     0.000  1.999419         0         0
 [7,]   0.00000   316.155  0.000000         0         0
 [8,]  71.09007     0.000  0.000000         0         0
 [9,]  71.09007     0.000  0.000000         0         0
      010010010 010101000 011111010 100000001 100010000
 [1,]         0    0.0000         0       287  1.671278
 [2,]      1832  261.9635       126         0  0.000000
 [3,]         0    0.0000       126         0  0.000000
 [4,]         0  261.9635       126         0  0.000000
 [5,]      1832    0.0000       126         0  1.671278
 [6,]         0  261.9635       126         0  0.000000
 [7,]         0    0.0000         0         0  0.000000
 [8,]      1832    0.0000       126         0  0.000000
 [9,]         0    0.0000         0       287  0.000000
      100010011 101101011 110110011  110110111 110111000
 [1,]  356.9733         2  47.84307  0.8691286  4.019356
 [2,]    0.0000         0  47.84307  0.8691286 20.931153
 [3,]    0.0000         2   0.00000  0.0000000  0.000000
 [4,]    0.0000         2  47.84307  0.8691286 20.931153
 [5,]  356.9733         0  47.84307  0.8691286  4.019356
 [6,]    0.0000         2   0.00000  0.0000000 20.931153
 [7,]    0.0000         0   0.00000 37.4812501  0.000000
 [8,]  341.7851         2  47.84307  0.8691286  0.000000
 [9,]  341.7851         2  47.84307  0.8691286  0.000000
      110111011 110111111 111111011
 [1,]  712.6387 23.985167      1225
 [2,]  696.4080 23.985167      1225
 [3,]    0.0000  0.000000      1225
 [4,]  696.4080 23.985167      1225
 [5,]  712.6387 23.985167      1225
 [6,]  737.4290  1.676926      1225
 [7,]    0.0000  2.364174         0
 [8,]  696.4274 23.985167      1225
 [9,]  696.4274 23.985167      1225
> 
> ## fast assignment matrix calculation
> 
> fass <- assignmentMatrix(mymm, gene=5, paired=TRUE, fast=TRUE, readLength=33,
+                         normalMean=250+33+33, normalVar=250+33+33,
+                         numDevs=4)
> 
> all(colnames(fass) %in% colnames(ass))
[1] TRUE
> 
> setdiff(colnames(ass), colnames(fass))
[1] "110110111" "110111000" "110111111"
> 
> fass
      000000011 000000100 000001000 001000000 010010000
 [1,]    0.0000    0.0000    0.0000         0    0.0000
 [2,]    0.0000    0.0000    0.0000         0  315.9996
 [3,]    0.0000    0.0000    0.0000       113    0.0000
 [4,]    0.0000    0.0000    0.0000         0    0.0000
 [5,]    0.0000    0.0000    0.0000         0  315.9996
 [6,]    0.0000    0.0000  305.7327         0    0.0000
 [7,]    0.0000  356.0004    0.0000         0    0.0000
 [8,]  348.9996    0.0000    0.0000         0    0.0000
 [9,]  348.9996    0.0000    0.0000         0    0.0000
      010010010 010101000 011111010 100000001 100010000
 [1,]         0    0.0000         0       287  314.9996
 [2,]      1832  314.9996       126         0    0.0000
 [3,]         0    0.0000       126         0    0.0000
 [4,]         0  314.9996       126         0    0.0000
 [5,]      1832    0.0000       126         0  314.9996
 [6,]         0  314.9996       126         0    0.0000
 [7,]         0    0.0000         0         0    0.0000
 [8,]      1832    0.0000       126         0    0.0000
 [9,]         0    0.0000         0       287    0.0000
      100010011 101101011 110110011 110111011 111111011
 [1,]        96  315.9996  333.7327  435.2678  879.0009
 [2,]         0    0.0000  333.7327  435.2678  879.0009
 [3,]         0  315.9996    0.0000    0.0000  879.0009
 [4,]         0  315.9996  333.7327  435.2678  879.0009
 [5,]        96    0.0000  333.7327  435.2678  879.0009
 [6,]         0  315.9996    0.0000  435.2678  879.0009
 [7,]         0    0.0000    0.0000    0.0000    0.0000
 [8,]        96  315.9996  333.7327  435.2678  879.0009
 [9,]        96  315.9996  333.7327  435.2678  879.0009
> 
> # sol1 <- solveIso(mymm, gene=5, reads=reads, paired=TRUE,
> #                  normalMean=250+33+33, normalVar=250+33+33, numDevs=4)
> 
> ## 
> 
> reads2 <- readSAM("/Users/gaborcsardi/tmp/reads-1-10_sorted.bam",
+                  region=get.region(6))
> 
> mat2 <- matchIso(mymm, gene=6, reads=reads2,
+                  paired=TRUE, normalMean=250+33+33, normalVar=250+33+33,
+                  numDevs=4)
> 
> ass2 <- assignmentMatrix(mymm, gene=6, paired=TRUE, readLength=33,
+                          normalMean=250+33+33, normalVar=250+33+33,
+                          numDevs=4)
> 
> ass2
          001      010      100      101      110
[1,]   0.0000   0.0000 2033.787 4.488792 24.72509
[2,]   0.0000 164.2754    0.000 0.000000 24.72509
[3,] 110.5117   0.0000    0.000 4.488792  0.00000
> 
> # sol2 <- solveIso(mymm, gene=6, reads=reads2,
> #         paired=TRUE, normalMean=250+33+33, normalVar=250+33+33, numDevs=4)
> 
> 
> proc.time()
   user  system elapsed 
 26.852   0.209  27.286 
