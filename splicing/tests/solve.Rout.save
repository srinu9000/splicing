
R version 2.14.0 (2011-10-31)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(splicing)
> 
> set.seed(42)
> options(width=60)
> 
> gene <- createGene(list(c(1,100), c(201,300), c(401,500)),
+                    list(c(1,2), c(1,3), c(1,2,3)))
> 
> reads <- simulateReads(gene, expression=c(2/10, 3/10, 5/10),
+                        noReads=1000L, readLength=20)
> 
> mres <- solveIso(gene, reads=reads, readLength=20L)
> mres$expression
[1] 0.1480842 0.3399616 0.5119542
> 
> reads2 <- simulateReads(gene, expression=c(2/10, 3/10, 5/10), paired=TRUE,
+                         noReads=1000L, readLength=20, normalMean=90,
+                         normalVar=50, numDevs=4)
> 
> mres2 <- solveIso(gene, reads=reads2, readLength=20L, paired=TRUE,
+                   normalMean=90, normalVar=50, numDevs=4)
> mres2$expression
[1] 0.2694845 0.2433443 0.4871712
> 
> assmat <- assignmentMatrix(gene, readLength=20, paired=TRUE,
+                            normalMean=90, normalVar=50, numDevs=4)
> 
> matchmat <- matchIso(gene, reads=reads2, normalMean=90, normalVar=50,
+                      numDevs=4)
> 
> matchstr <- table(apply((matchmat[[1]] != 0) + 0, 2, paste, collapse=""))
> 
> matchstr <- matchstr[colnames(assmat)]
> 
> fit <- lsfit(t(assmat), matchstr, intercept=FALSE)
> 
> n <- function(x) x/sum(x)
> 
> n(fit$coefficients)
       X1        X2        X3 
0.2694845 0.2433443 0.4871712 
> 
> ########
> 
> genelist <- lapply(seq(10,100,by=10), function(x) {
+   createGene(exons=list(c(1,1000), c(2001, 2000+x), c(4001,5000)),
+              isoforms=list(c(1,2,3), c(1,3)), id=sprintf("gene-%d", x))
+ })
> 
> genes <- do.call(merge, genelist)
> 
> set.seed(42)
> readlist <- lapply(seq_along(genelist), function(x)
+                    simulateReads(geneStructure=genes, gene=x, 
+                                  qname=sprintf("read-%i-%%i", x),
+                                  expression=c(2/10, 8/10),
+                                  noReads=1000L, readLength=35))
> 
> reads <- do.call(mergeReads, readlist)
> 
> samfile <- paste(tempfile(), sep="", ".sam")
> bamfile <- paste(tempfile(), sep="", ".bam")
> bamfile2 <- tempfile()
> writeSAM(reads, samfile)
> SAMFile2BAMFile(samfile, bamfile)
> sortBAMFile(bamfile, bamfile2)
> indexBAMFile(paste(bamfile2, sep="", ".bam"))
> 
> res <- runLinear(genes, readsfile=paste(bamfile2, sep="", ".bam"),
+                  results="return")
Running gene # 1, gene-10
Running gene # 2, gene-20
Running gene # 3, gene-30
Running gene # 4, gene-40
Running gene # 5, gene-50
Running gene # 6, gene-60
Running gene # 7, gene-70
Running gene # 8, gene-80
Running gene # 9, gene-90
Running gene # 10, gene-100
> sapply(res, "[[", "expression")
       gene-10   gene-20  gene-30   gene-40  gene-50
[1,] 0.1451534 0.2625446 0.223849 0.1462224 0.244441
[2,] 0.8548466 0.7374554 0.776151 0.8537776 0.755559
       gene-60   gene-70   gene-80   gene-90  gene-100
[1,] 0.1968205 0.2537739 0.2159679 0.1464798 0.1677108
[2,] 0.8031795 0.7462261 0.7840321 0.8535202 0.8322892
> 
> out <- tempfile()
> dir.create(out)
> res <- runLinear(genes, readsfile=paste(bamfile2, sep="", ".bam"),
+                  results="files", resultDir=out)
Running gene # 1, gene-10
Running gene # 2, gene-20
Running gene # 3, gene-30
Running gene # 4, gene-40
Running gene # 5, gene-50
Running gene # 6, gene-60
Running gene # 7, gene-70
Running gene # 8, gene-80
Running gene # 9, gene-90
Running gene # 10, gene-100
> 
> ##########
> 
> readlist2 <- lapply(seq_along(genelist), function(x)
+                     simulateReads(geneStructure=genes, gene=x,
+                                   qname=sprintf("read-%i-%%i", x),
+                                   expression=c(2/10, 8/10),
+                                   noReads=1000L, readLength=35, paired=TRUE,
+                                   normalMean=90, normalVar=50, numDevs=4))
> 
> reads2 <- do.call(mergeReads, readlist2)
> 
> samfile <- paste(tempfile(), sep="", ".sam")
> bamfile <- paste(tempfile(), sep="", ".bam")
> bamfile2 <- tempfile()
> writeSAM(reads2, samfile)
> SAMFile2BAMFile(samfile, bamfile)
> sortBAMFile(bamfile, bamfile2)
> indexBAMFile(paste(bamfile2, sep="", ".bam"))
> 
> res <- runLinear(genes, readsfile=paste(bamfile2, sep="", ".bam"),
+                  results="return", normalMean=90, normalVar=50, numDevs=4)
Running gene # 1, gene-10
Running gene # 2, gene-20
Running gene # 3, gene-30
Running gene # 4, gene-40
Running gene # 5, gene-50
Running gene # 6, gene-60
Running gene # 7, gene-70
Running gene # 8, gene-80
Running gene # 9, gene-90
Running gene # 10, gene-100
> sapply(res, "[[", "expression")
     gene-10   gene-20 gene-30   gene-40   gene-50
[1,]       1 0.3381714       0 0.1035586 0.2385076
[2,]       0 0.6618286       1 0.8964414 0.7614924
       gene-60   gene-70   gene-80    gene-90  gene-100
[1,] 0.1145723 0.1308477 0.1172599 0.05067211 0.1564116
[2,] 0.8854277 0.8691523 0.8827401 0.94932789 0.8435884
> 
> out <- tempfile()
> dir.create(out)
> res <- runLinear(genes, readsfile=paste(bamfile2, sep="", ".bam"),
+                  results="files", resultDir=out, normalMean=90,
+                  normalVar=50, numDevs=4)
Running gene # 1, gene-10
Running gene # 2, gene-20
Running gene # 3, gene-30
Running gene # 4, gene-40
Running gene # 5, gene-50
Running gene # 6, gene-60
Running gene # 7, gene-70
Running gene # 8, gene-80
Running gene # 9, gene-90
Running gene # 10, gene-100
> 
