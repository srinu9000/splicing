
R version 2.14.0 (2011-10-31)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## Generate, match and estimate overlapping paired-end reads
> 
> library(splicing)
> 
> dist <- .Call("R_splicing_normal_fragment", 50, 100, 4, 35L,
+               PACKAGE="splicing")
> dist$fragmentStart
[1] 35
> 
> ## 
> 
> gene <- createGene(list(c(1,1000), c(2001, 3000)),
+                    list(c(1,2), c(1)))
> 
> rl <- 50
> normalMean <- 75
> normalVar <-  75
> 
> reads <- simulateReads(gene, expression=c(2/10, 8/10),
+                        noReads=1000L, readLength=rl, paired=TRUE,
+                        normalMean=normalMean, normalVar=normalVar,
+                        numDevs=4)
> 
> ## 
> 
> matches <- matchIso(gene, reads=reads, normalMean=normalMean,
+                     normalVar=normalVar, numDevs=4)
> 
> any(colSums(matches[[1]] !=  0) == 0)
[1] FALSE
> any(colSums(matches[[2]] != -1) == 0)
[1] FALSE
> 
> ##
> 
> misores <- MISO(gene, reads=reads, normalMean=normalMean,
+                 normalVar=normalVar, numDevs=4)
> any(colSums(misores$matchMatrix != 0) == 0)
[1] FALSE
> 
> ##
> 
> solveres <- solveIso(gene, reads=reads, normalMean=normalMean,
+                      normalVar=normalVar, numDevs=4)
> any(colSums(solveres$match != 0) == 0)
[1] FALSE
> 
> 
